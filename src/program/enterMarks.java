package program;

import fileMaker.FileExp;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author David
 */
public class enterMarks extends javax.swing.JFrame {
public int mute=0;
    private class tabTextImport {

    }

    /**
     * Creates new form enterMarks
     */
    public enterMarks() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        stdCB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        nameListCB = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        srCB = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        sessionCB = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        countTF2 = new javax.swing.JLabel();
        totalObtainedTF = new javax.swing.JTextField();
        countTF3 = new javax.swing.JLabel();
        percTF = new javax.swing.JTextField();
        countTF4 = new javax.swing.JLabel();
        maxMarksTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        confB = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        countTF = new javax.swing.JLabel();
        countTF1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TECH-RES BY JACOB MAHTO-MARKS MODULE");

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 51));
        jLabel1.setText("Enter Class : ");

        stdCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        stdCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PG", "NUR", "LKG", "UKG", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI Arts-A", "XI Arts-B", "XI Arts-C", "XI Commerce-A", "XI Commerce-B", "XI Commerce-C", "XII Arts-A", "XII Arts-B", "XII Arts-C", "XII Commerce-A", "XII Commerce-B", "XII Commerce-C" }));
        stdCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stdCBActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 51));
        jLabel2.setText("Student's Name :");

        nameListCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        nameListCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameListCBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nameListCBMouseEntered(evt);
            }
        });
        nameListCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameListCBActionPerformed(evt);
            }
        });
        nameListCB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nameListCBPropertyChange(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 255, 51));
        jLabel5.setText("Select S.R. (if names are same) :");

        srCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        srCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                srCBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                srCBMouseEntered(evt);
            }
        });
        srCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srCBActionPerformed(evt);
            }
        });
        srCB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                srCBPropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 255, 51));
        jLabel6.setText("Session :");

        sessionCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        sessionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" }));
        sessionCB.setSelectedIndex(1);
        sessionCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sessionCBFocusLost(evt);
            }
        });
        sessionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameListCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stdCB, 0, 251, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(srCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sessionCB, 0, 147, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stdCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sessionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameListCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(srCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        table.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Subject", "I Term", "II Term", "III Term", "Half Yearly", "Annual"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        countTF2.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        countTF2.setForeground(new java.awt.Color(255, 255, 255));
        countTF2.setText("Grand Total :");
        countTF2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        totalObtainedTF.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N

        countTF3.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        countTF3.setForeground(new java.awt.Color(255, 255, 255));
        countTF3.setText("Percentage :");
        countTF3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        percTF.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N

        countTF4.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        countTF4.setForeground(new java.awt.Color(255, 255, 255));
        countTF4.setText("Max. Marks :");
        countTF4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        maxMarksTF.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(countTF2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalObtainedTF)
                        .addGap(29, 29, 29)
                        .addComponent(countTF3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(percTF)
                        .addGap(18, 18, 18)
                        .addComponent(countTF4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(maxMarksTF)
                        .addGap(46, 46, 46)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(countTF2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                        .addComponent(totalObtainedTF))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(countTF3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(percTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(countTF4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxMarksTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 51));
        jLabel3.setText("TECH-RES");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 255));
        jLabel4.setText("MARKS ENTRY");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ABSENT = -1        MEDICAL = -2");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        confB.setFont(new java.awt.Font("Adobe Hebrew", 1, 24)); // NOI18N
        confB.setText("CONFIRM");
        confB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confBActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Adobe Hebrew", 1, 24)); // NOI18N
        jButton2.setText("Student Info");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        countTF.setFont(new java.awt.Font("Adobe Hebrew", 0, 24)); // NOI18N
        countTF.setText("0");

        countTF1.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        countTF1.setText("TOTAL STUDENTS :");
        countTF1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("Import");

        jMenuItem1.setText("Tabbed Text file");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(countTF1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countTF, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(confB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(135, 135, 135)
                .addComponent(jButton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(confB)
                        .addComponent(jButton2))
                    .addComponent(countTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameListCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameListCBActionPerformed

        String name = (String) nameListCB.getSelectedItem();

        String std = (String) stdCB.getSelectedItem();
        System.out.println(nameListCB.getSelectedIndex());
        DefaultTableModel tab = (DefaultTableModel) table.getModel();
        try {
            int y = tab.getRowCount();
            y--;
            while (y >= 0) {
                tab.removeRow(y);
                y--;
            }
        } catch (Exception e) {
        }

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/rsl", "root", "lion");
            Statement stmt = con.createStatement();

            //String query11 = "SELECT subjectsClass.id,subject from subjectsclass,subjectsoriginal where std='" + std + "' AND session='" + sessionCB.getSelectedItem() + "' AND subjectsclass.id=subjectsOriginal.id  ;";
            String query11 = "Select subjectsclass.id,subject from subjectsclass,subjectsoriginal where std='" + std + "' AND session='" + sessionCB.getSelectedItem() + "' AND subjectsclass.id=subjectsoriginal.id ORDER BY subjectsclass.preced;";
            stmt.execute(query11);

            ResultSet rs = stmt.executeQuery(query11);

            //gettting subjects
            while (rs.next()) {
                tab.addRow(new Object[]{
                    rs.getString("id"), rs.getString("subject")
                }
                );
            }

            try {
                srCB.setSelectedIndex(nameListCB.getSelectedIndex());
            } catch (Exception e) {
            }
            con.close();
        } catch (Exception E) {
            System.out.println(E);

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_nameListCBActionPerformed

    private void stdCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stdCBActionPerformed
        try {
        } catch (Exception e) {
        }
        String std = (String) stdCB.getSelectedItem();
        nameListCB.removeAllItems();
        srCB.removeAllItems();
        srCB.setEnabled(false);
        nameListCB.setEnabled(false);
        System.out.println("YES --------------------------------------");

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "lion");
            Statement stmt = con.createStatement();
            String query1 = "CREATE DATABASE IF NOT EXISTS rsl;";
            String query2 = "USE rsl;";
            String query3 = "SELECT sr,name FROM studentInfo WHERE class='" + std + "' and session='"+sessionCB.getSelectedItem()+"';";

            stmt.execute(query1);
            stmt.execute(query2);

            ResultSet rs = stmt.executeQuery(query3);
            int i = 0;
            while (rs.next()) {
                nameListCB.addItem(rs.getString("name"));
                srCB.addItem(rs.getString("sr"));
                i++;

            }
            countTF.setText(i + "");
            nameListCB.setEnabled(true);
            srCB.setEnabled(true);

            //to neutralize the position in the stdCB & srCB
            nameListCB.setSelectedIndex(0);
            srCB.setSelectedIndex(0);
            con.close();

        } catch (Exception E) {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_stdCBActionPerformed

    private void nameListCBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nameListCBPropertyChange

        // TODO add your handling code here:
    }//GEN-LAST:event_nameListCBPropertyChange

    private void nameListCBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameListCBMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_nameListCBMouseClicked

    private void nameListCBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameListCBMouseEntered

// TODO add your handling code here:
    }//GEN-LAST:event_nameListCBMouseEntered

    private void confBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confBActionPerformed
        DefaultTableModel tab = (DefaultTableModel) table.getModel();
        String exam;

        int countRow = tab.getRowCount();
        double marksArray[][] = new double[countRow][5];
        int colExam = 0;
        for (colExam = 0; colExam < 5; colExam++) {

            for (int iSubject = 0; iSubject < countRow; iSubject++) {

                try {
                    String value = tab.getValueAt(iSubject, colExam + 2).toString();
                    marksArray[iSubject][colExam] = Double.parseDouble(value);
                } catch (Exception e) {
                    marksArray[iSubject][colExam] = 0;
                }
            }
        }

        for (int i = 0; i < countRow; i++) {

            for (int j = 0; j < 5; j++) {
                System.out.print(marksArray[i][j] + "  ");
            }
            System.out.println("");
        }

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/rsl", "root", "lion");
            Statement stmt = con.createStatement();

            int jacob = 0;

            String queryForDelete = "DELETE FROM marks WHERE year=" + sessionCB.getSelectedItem() + " AND sr='" + srCB.getSelectedItem() + "';";
            stmt.execute(queryForDelete);

            for (int xcol = 0; xcol < 5; xcol++) {

                switch (xcol) {
                    case 0:
                        exam = "fterm";
                        break;
                    case 1:
                        exam = "sterm";
                        break;
                    case 2:
                        exam = "tterm";
                        break;
                    case 3:
                        exam = "hterm";
                        break;
                    case 4:
                        exam = "aterm";
                        break;
                    default:
                        exam = "error";
                }

                for (int yrow = 0; yrow < countRow; yrow++) {

                    System.out.print(marksArray[yrow][xcol] + "      -   ");

                    String insertQuery = "INSERT INTO marks(sr,exam,id,subject,marks,year) VALUES('" + srCB.getSelectedItem() + "','" + exam + "'," + tab.getValueAt(yrow, 0) + ",'" + tab.getValueAt(yrow, 1) + "'," + marksArray[yrow][xcol] + ",'" + sessionCB.getSelectedItem() + "');";
                    stmt.execute(insertQuery);
                }
                System.out.println();
            }

            if(mute==0){
            JOptionPane.showMessageDialog(rootPane, "RECORDS ADDED SUCCESSFULLY !");}
            
            System.out.println("Added Successfully");

        } catch (Exception E) {

            JOptionPane.showMessageDialog(null, E + "YES");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_confBActionPerformed

    private void srCBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_srCBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_srCBMouseClicked

    private void srCBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_srCBMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_srCBMouseEntered

    private void srCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srCBActionPerformed

        try {
            nameListCB.setSelectedIndex(srCB.getSelectedIndex());

        } catch (Exception e) {
            System.out.println(e);
        }

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "lion");
            Statement stmt = con.createStatement();
            String query1 = "CREATE DATABASE IF NOT EXISTS rsl;";
            String query2 = "USE rsl;";

            stmt.execute(query1);
            stmt.execute(query2);

            DefaultTableModel tabl = (DefaultTableModel) table.getModel();

            int[] arrayOfSub = new int[tabl.getRowCount()];

            for (int i = 0; i < tabl.getRowCount(); i++) {

                for (int j = 2; j < 7; j++) {
                    String querys = "";
                    if (j == 2) {
                        querys = "SELECT * FROM marks where year=" + sessionCB.getSelectedItem() + " AND sr='" + srCB.getSelectedItem() + "' AND exam='fterm' and subject='" + tabl.getValueAt(i, 1) + "';";

                    }
                    if (j == 3) {
                        querys = "SELECT * FROM marks where year=" + sessionCB.getSelectedItem() + " AND sr='" + srCB.getSelectedItem() + "' AND exam='sterm' and subject='" + tabl.getValueAt(i, 1) + "';";

                    }
                    if (j == 4) {
                        querys = "SELECT * FROM marks where year=" + sessionCB.getSelectedItem() + " AND sr='" + srCB.getSelectedItem() + "' AND exam='tterm' and subject='" + tabl.getValueAt(i, 1) + "';";

                    }
                    if (j == 5) {
                        querys = "SELECT * FROM marks where year=" + sessionCB.getSelectedItem() + " AND sr='" + srCB.getSelectedItem() + "' AND exam='hterm'  and subject='" + tabl.getValueAt(i, 1) + "';";

                    }
                    if (j == 6) {
                        querys = "SELECT * FROM marks where year=" + sessionCB.getSelectedItem() + " AND sr='" + srCB.getSelectedItem() + "' AND exam='aterm'  and subject='" + tabl.getValueAt(i, 1) + "';";

                    }

                    try {
                        ResultSet rs = stmt.executeQuery(querys);
                        rs.next();
                        tabl.setValueAt(rs.getInt("marks"), i, j);
                        rs.close();
                    } catch (Exception e) {

                    }

                }

            }

        } catch (Exception E) {
            System.out.println(E);
            JOptionPane.showMessageDialog(null, E + " DD");//jacob alert ?????????????????????????
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_srCBActionPerformed

    private void srCBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_srCBPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_srCBPropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        studentInfo obj = new studentInfo();
        obj.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sessionCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sessionCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_sessionCBFocusLost

    private void sessionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sessionCBActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       DefaultTableModel tab=(DefaultTableModel)table.getModel();
        FileExp obj = new FileExp();
        String[] args = null;
        obj.main(args);
        File file = obj.file;
        String[] sub = null;

        try {
            BufferedReader a = new BufferedReader(new FileReader(file));
            String contentLine = a.readLine();
            int term = 1;
            mute=1;
            while (contentLine != null) {
                System.out.println("PRINT "+contentLine);
                if (contentLine.trim().equals("1")) {
                    term = 1;
                contentLine=a.readLine();
                } else if (contentLine.trim().equals("2")) {
                    term = 2;
                    contentLine=a.readLine();
                    
                if(contentLine==null){continue;}
                } else if (contentLine.trim().equals("3")) {
                    term = 3;
                    contentLine=a.readLine();
                    
                if(contentLine==null){continue;}
                } else if (contentLine.trim().equals("4")) {
                    term = 4;
                    contentLine=a.readLine();
              
                } else if (contentLine.trim().equals("5")) {
                    term = 5;
                    contentLine=a.readLine();
                }
                
                int elementCounter = 0, tabInitial = 0, tabFinal = 0;
                sub = new String[20];
                for (tabFinal = 0; tabFinal < contentLine.length(); tabFinal++) {
                    //System.out.println(contentLine);
                    if(tabFinal == contentLine.length()-1){
                        System.out.println("yesno"); 
                        try{sub[elementCounter++] = contentLine.substring(tabInitial, tabFinal+1); }
                        catch(Exception e){
                        sub[elementCounter++] = "ERROR";
                        }
                          System.out.println("NONO"+tabInitial+"---"+tabFinal);
                           }
                    

                    try {
                        if (contentLine.charAt(tabFinal) == '\t' || contentLine.charAt(tabFinal) == '\n') {
                            try {
                                sub[elementCounter++] = contentLine.substring(tabInitial, tabFinal);
                            } catch (Exception e) {
                                sub[elementCounter++] = "ERROR";
                            }

                            tabInitial = tabFinal + 1;
                        }
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
                System.out.println("-----"+Arrays.toString(sub));
                //entering data into table
            try{
            nameListCB.setSelectedItem(sub[0].trim());
            if(nameListCB.getSelectedItem().equals(sub[0])!=true){
            JOptionPane.showMessageDialog(null, "SEVERE ERROR. NAME MISMATCH.--UNCHANGED : "+nameListCB.getSelectedItem()+"*****FAULTY : "+sub[0]+"--");
            contentLine=null;
            continue;
            }
            //JOptionPane.showMessageDialog(null, sub[0]);
            for(int i=1;sub[i]!=null;i++){
            tab.setValueAt(sub[i], i-1, term+1);
            }
            //JOptionPane.showMessageDialog(null, "Click");
            confB.doClick();
          
            System.out.println("HI"+term);
              
            }
            catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                
                contentLine = a.readLine();
                
            }
            JOptionPane.showMessageDialog(null, "Data Imported Successfully.");

        } catch (IOException ex) {
            Logger.getLogger(enterMarks.class.getName()).log(Level.SEVERE, null, ex);
        }
        mute=0;
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
nameListCB.setSelectedItem("DISHA SENGAR");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(enterMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(enterMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(enterMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(enterMarks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new enterMarks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confB;
    private javax.swing.JLabel countTF;
    private javax.swing.JLabel countTF1;
    private javax.swing.JLabel countTF2;
    private javax.swing.JLabel countTF3;
    private javax.swing.JLabel countTF4;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxMarksTF;
    public javax.swing.JComboBox<String> nameListCB;
    private javax.swing.JTextField percTF;
    public javax.swing.JComboBox<String> sessionCB;
    public javax.swing.JComboBox<String> srCB;
    public javax.swing.JComboBox<String> stdCB;
    public javax.swing.JTable table;
    private javax.swing.JTextField totalObtainedTF;
    // End of variables declaration//GEN-END:variables
}
