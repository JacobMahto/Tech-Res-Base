package program;


import java.awt.Color;
import java.awt.Point;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import printPackage.reportCardE;

import sms.testXML;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author David
 */
public class allStudentInfoEdit extends javax.swing.JFrame {
String querys;
int flag=0;

    /**
     * Creates new form allStudentInfoEdit
     */
    public allStudentInfoEdit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        showB1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        showB = new javax.swing.JButton();
        classCB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        countTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTable2 = new javax.swing.JScrollPane();
        tableTB = new javax.swing.JTable();
        typeCB = new javax.swing.JComboBox<>();
        castCB = new javax.swing.JComboBox<>();
        sortChB = new javax.swing.JCheckBox();
        sortChB1 = new javax.swing.JCheckBox();
        sortChB2 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        genreCB = new javax.swing.JComboBox<>();
        sortChB3 = new javax.swing.JCheckBox();
        strinTF = new javax.swing.JTextField();
        religionCB = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        sessionCB = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        newSCB = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TECH-RES 2016 - The Math Engine");

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/v1.jpg"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Adobe Hebrew", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 102));
        jLabel8.setText("JACOB'S RESEARCH LABORATORY");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(4);
        jTextArea1.setTabSize(6);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        showB1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        showB1.setText("Send");
        showB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showB1ActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("St. Name");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Adobe Hebrew", 0, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 255, 255));
        jLabel10.setText("Info & Message Engine");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(162, 162, 162)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(showB1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jCheckBox1))
                        .addGap(31, 31, 31))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showB1))
                .addGap(19, 19, 19))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 102));
        jLabel1.setText("Enter Class : ");

        showB.setFont(new java.awt.Font("Adobe Hebrew", 0, 24)); // NOI18N
        showB.setText("REFRESH");
        showB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBActionPerformed(evt);
            }
        });

        classCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        classCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PG", "NUR", "LKG", "UKG", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI Arts-A", "XI Arts-B", "XI Arts-C", "XI Commerce-A", "XI Commerce-B", "XI Commerce-C", "XII Arts-A", "XII Arts-B", "XII Arts-C", "XII Commerce-A", "XII Commerce-B", "XII Commerce-C" }));
        classCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                classCBFocusLost(evt);
            }
        });
        classCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classCBActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 102));
        jLabel3.setText("Total Entries :");

        countTF.setEditable(false);
        countTF.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 102));
        jLabel4.setText("Type :");

        jTable2.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });

        tableTB.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        tableTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/R", "Name", "Class", "F. Name", "M. Name", "Sex", "DOB", "Address", "D.Adm.", "Caste", "Religion", "F. Contact", "M. Contact", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTB.setDragEnabled(true);
        tableTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTBMouseClicked(evt);
            }
        });
        jTable2.setViewportView(tableTB);
        if (tableTB.getColumnModel().getColumnCount() > 0) {
            tableTB.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableTB.getColumnModel().getColumn(2).setPreferredWidth(20);
            tableTB.getColumnModel().getColumn(3).setPreferredWidth(100);
            tableTB.getColumnModel().getColumn(5).setPreferredWidth(15);
            tableTB.getColumnModel().getColumn(6).setPreferredWidth(32);
            tableTB.getColumnModel().getColumn(7).setPreferredWidth(60);
            tableTB.getColumnModel().getColumn(8).setPreferredWidth(32);
            tableTB.getColumnModel().getColumn(13).setPreferredWidth(25);
        }

        typeCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        typeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Classwise", "Schoolwise" }));
        typeCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                typeCBFocusLost(evt);
            }
        });
        typeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeCBActionPerformed(evt);
            }
        });

        castCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        castCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GENERAL", "OBC", "SC", "ST", "OTHER" }));
        castCB.setEnabled(false);
        castCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                castCBFocusLost(evt);
            }
        });
        castCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                castCBActionPerformed(evt);
            }
        });

        sortChB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        sortChB.setForeground(new java.awt.Color(255, 255, 255));
        sortChB.setText("Sort");
        sortChB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortChBActionPerformed(evt);
            }
        });

        sortChB1.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        sortChB1.setForeground(new java.awt.Color(255, 255, 255));
        sortChB1.setEnabled(false);
        sortChB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortChB1ActionPerformed(evt);
            }
        });

        sortChB2.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        sortChB2.setForeground(new java.awt.Color(255, 255, 255));
        sortChB2.setEnabled(false);
        sortChB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortChB2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 102));
        jLabel7.setText("Advanced :");

        genreCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        genreCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S.R.", "Student Name", "F. Name", "M. Name", "Contact", "Address" }));
        genreCB.setEnabled(false);
        genreCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                genreCBFocusLost(evt);
            }
        });
        genreCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreCBActionPerformed(evt);
            }
        });

        sortChB3.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        sortChB3.setForeground(new java.awt.Color(255, 255, 255));
        sortChB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortChB3ActionPerformed(evt);
            }
        });

        strinTF.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        strinTF.setEnabled(false);
        strinTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strinTFActionPerformed(evt);
            }
        });

        religionCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        religionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hindu", "Muslim", "Jain", "Sikh", "Christian", "Sindhi", "Parsi", "Other" }));
        religionCB.setEnabled(false);
        religionCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                religionCBFocusLost(evt);
            }
        });
        religionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                religionCBActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jButton3.setText("Edit Information");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jButton4.setText("Delete selected Entries");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        sessionCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        sessionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" }));
        sessionCB.setSelectedIndex(1);
        sessionCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sessionCBFocusLost(evt);
            }
        });
        sessionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionCBActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jButton5.setText("Promote Selected Entries");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        newSCB.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        newSCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" }));
        newSCB.setSelectedIndex(1);
        newSCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newSCBFocusLost(evt);
            }
        });
        newSCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSCBActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Adobe Hebrew", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Promote :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTable2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(34, 34, 34)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addGap(31, 31, 31)
                                .addComponent(newSCB, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(sessionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(classCB, 0, 181, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sortChB)
                                .addGap(18, 18, 18)
                                .addComponent(sortChB1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(religionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sortChB2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countTF, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sortChB3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(strinTF, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genreCB, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addComponent(castCB, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showB)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sortChB1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(religionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sortChB2)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(classCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(typeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sortChB, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sessionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(castCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(countTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(sortChB3)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(strinTF)
                                .addComponent(genreCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(showB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jTable2, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton4))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newSCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_classCBFocusLost

    private void classCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classCBActionPerformed
showB.doClick();

        // TODO add your handling code here:
    }//GEN-LAST:event_classCBActionPerformed

    private void showBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBActionPerformed
DefaultTableModel table=(DefaultTableModel)tableTB.getModel();

try{
int i=0,limit;
limit=table.getRowCount();
while(i<=limit){
table.removeRow(0);
i++;
}}
catch(Exception e){}



        try{
            Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost","root","lion");
                Statement stmt=con.createStatement();
                              String query1="USE rsl;";
                
                stmt.execute(query1);
                
                  
                if(flag==0){
                if(typeCB.getSelectedIndex()==0){
                    
                    querys="SELECT * FROM studentInfo WHERE class='"+(String)classCB.getSelectedItem()+"' AND session='"+sessionCB.getSelectedItem().toString()+"' ORDER BY name;";
                 
                }
                else {
                 querys="SELECT * FROM studentInfo where session='"+sessionCB.getSelectedItem().toString()+"' ORDER BY class ;";
                  
                }
                }
                else {
                flag=0;
                
                }
                
                
                ResultSet rs=stmt.executeQuery(querys);
                
                rs.last();
                int countR=rs.getRow();
                countTF.setText(rs.getRow()+"");
                rs.beforeFirst();
                
                while(rs.next()){
                table.addRow(new Object[]{
                rs.getString("sr"),rs.getString("name"),rs.getString("class"),rs.getString("fname"),rs.getString("mname"),rs.getString("sex"),rs.getString("dob"),rs.getString("address"),rs.getString("doa"),rs.getString("caste"),rs.getString("religion"),rs.getString("fcon"),rs.getString("mcon"),rs.getString("rmk")});   
                
                } 
                
                           int i = 0;
            //making date display more visual for date of birth
            while (i < countR) {
                String date = (String) table.getValueAt(i, 6);
                System.out.println(date);

                try{table.setValueAt(date.substring(0, 2) + "-" + date.substring(2, 4) + "-" + date.substring(6), i, 6);}
                catch(Exception e){}

                i++;
            }

            i = 0;
            //making date display more visual for date of adminssion
            while (i < countR) {
                String date = (String) table.getValueAt(i, 8);
                System.out.println(date);
                
                try{table.setValueAt(date.substring(0, 2) + "-" + date.substring(2, 4) + "-" + date.substring(6), i, 8);}
                catch(Exception e){}
                

                i++;
            }

                
                
}
catch(Exception E){
System.out.println(E);
JOptionPane.showMessageDialog(null,E+"\n Contact Jacob Mahto");
} 
        // TODO add your handling code here:
    }//GEN-LAST:event_showBActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        
        studentInfo obj=new studentInfo();
obj.setVisible(true);
JOptionPane.showMessageDialog(null, "Enter S/R number !");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void typeCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_typeCBFocusLost

    private void typeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeCBActionPerformed
if(typeCB.getSelectedIndex()==0 ){
classCB.setEnabled(true);
classCB.setSelectedIndex(classCB.getSelectedIndex());
}
else {
classCB.setEnabled(false);
classCB.setSelectedIndex(0);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_typeCBActionPerformed

    private void castCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_castCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_castCBFocusLost

    private void castCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_castCBActionPerformed
typeCB.setSelectedIndex(typeCB.getSelectedIndex());
classCB.setEnabled(false);
        DefaultTableModel table=(DefaultTableModel)tableTB.getModel();
int i=0;
int rowC=table.getRowCount();

if(sortChB1.isSelected()){
    System.out.println("ENTERED DUAL");
    i=0;
while(i<rowC){
if(table.getValueAt(i,10).equals(religionCB.getSelectedItem()) && table.getValueAt(i,9).equals(castCB.getSelectedItem())){

}
else {
table.removeRow(i);
i--;
rowC--;
}

i++;
System.out.println("I="+i+" AND COUNT="+table.getRowCount());

}
    
    
    
    
    
    
    
    
    
   }



else{
     while(i<rowC){
if(table.getValueAt(i,10).equals(castCB.getSelectedItem())){

}
else {
table.removeRow(i);
i--;
rowC--;
}
i++;
System.out.println("I="+i+" AND COUNT="+table.getRowCount());
}
    
}
        


        // TODO add your handling code here:
    }//GEN-LAST:event_castCBActionPerformed

    private void sortChBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortChBActionPerformed
if(sortChB.isSelected()){
classCB.setEnabled(false);
typeCB.setEnabled(false);
sortChB1.setEnabled(true);
sortChB2.setEnabled(true);
}
else {

dispose();
new allStudentInfoEdit().setVisible(true);


}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_sortChBActionPerformed

    private void sortChB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortChB1ActionPerformed
if(sortChB1.isSelected()){
religionCB.setEnabled(true);
}
else {
religionCB.setEnabled(false);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_sortChB1ActionPerformed

    private void sortChB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortChB2ActionPerformed
if(castCB.isEnabled()){
castCB.setEnabled(false);
}

else castCB.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_sortChB2ActionPerformed

    private void genreCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_genreCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_genreCBFocusLost

    private void genreCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreCBActionPerformed
int ind=genreCB.getSelectedIndex();
switch(ind){
    case 0 : querys="SELECT * FROM studentInfo where sr like '%"+strinTF.getText()+"%' and session='"+sessionCB.getSelectedItem()+"';";
    break;
    case 1 : querys="SELECT * FROM studentInfo where name like '%"+strinTF.getText()+"%' and session='"+sessionCB.getSelectedItem()+"';";
    break;
    case 2 : querys="SELECT * FROM studentInfo where fname like '%"+strinTF.getText()+"%' and session='"+sessionCB.getSelectedItem()+"';";
    break;
    case 3 : querys="SELECT * FROM studentInfo where mname like '%"+strinTF.getText()+"%' and session='"+sessionCB.getSelectedItem()+"';";
    break;
    case 4 : querys="SELECT * FROM studentInfo where contactno like '%"+strinTF.getText()+"%' and session='"+sessionCB.getSelectedItem()+"';";
    break;
    case 5 : querys="SELECT * FROM studentInfo where address like '%"+strinTF.getText()+"%' and session='"+sessionCB.getSelectedItem()+"';";
    
     
}
System.out.println(querys);
flag=1;
showB.doClick();

        
        // TODO add your handling code here:
    }//GEN-LAST:event_genreCBActionPerformed

    private void sortChB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortChB3ActionPerformed
if(sortChB3.isSelected()){
classCB.setEnabled(false);
typeCB.setEnabled(false);
sortChB.setEnabled(false);
sortChB1.setEnabled(false);
sortChB2.setEnabled(false);
strinTF.setEnabled(true);
genreCB.setEnabled(true);


}
else {

dispose();
new allStudentInfoEdit().setVisible(true);


}
        // TODO add your handling code here:
    }//GEN-LAST:event_sortChB3ActionPerformed

    private void strinTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strinTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strinTFActionPerformed

    private void religionCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_religionCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_religionCBFocusLost

    private void religionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_religionCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_religionCBActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

        
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void tableTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTBMouseClicked
try{
    Point p=evt.getPoint();
    DefaultTableModel tab=(DefaultTableModel)tableTB.getModel();
int row=tableTB.rowAtPoint(p);
int col=tableTB.columnAtPoint(p);
//JOptionPane.showMessageDialog(null, "row is"+row+"col"+col);
if(evt.getClickCount()==2){
    studentInfo obj=new studentInfo();
obj.srFTF.setText(tab.getValueAt(row, 0)+"");
obj.jButton5.doClick();
    obj.setVisible(true);
    
    
    }}
catch(Exception e){
//JOptionPane.showMessageDialog(null, e);
}        // TODO add your handling code here:
    }//GEN-LAST:event_tableTBMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 DefaultTableModel tab=(DefaultTableModel)tableTB.getModel();
int rowNo=tableTB.getSelectedRowCount();
    int[] selectedRows = tableTB.getSelectedRows();
studentInfo obj=new studentInfo();
    obj.bulkDelete=1;//so that deletion message don't appear
for(int i=0;i<rowNo;i++){
obj.srTF.setText(tab.getValueAt(selectedRows[i], 0).toString());
obj.jButton8.doClick();
}
JOptionPane.showMessageDialog(null, "Selected entries deleted from the database !","Success !",1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void sessionCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sessionCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_sessionCBFocusLost

    private void sessionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionCBActionPerformed
classCB.setSelectedIndex(classCB.getSelectedIndex());
typeCB.setSelectedIndex(typeCB.getSelectedIndex());
        // TODO add your handling code here:
    }//GEN-LAST:event_sessionCBActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 DefaultTableModel tab=(DefaultTableModel)tableTB.getModel();
int rowNo=tableTB.getSelectedRowCount();
    int[] selectedRows = tableTB.getSelectedRows();
studentInfo obj=new studentInfo();
    
for(int i=0;i<rowNo;i++){
    obj.bulkDelete=1;//so that deletion message don't appear
obj.srFTF.setText(tab.getValueAt(selectedRows[i], 0).toString());
obj.jButton5.doClick();
obj.classCB.setSelectedIndex(obj.classCB.getSelectedIndex()+1);
obj.sessionCB.setSelectedItem(newSCB.getSelectedItem());
obj.jButton4.doClick();
}
JOptionPane.showMessageDialog(null, "Selected entries promoted by one class !","PROMOTED !",1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void newSCBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newSCBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_newSCBFocusLost

    private void newSCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newSCBActionPerformed

    private void showB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showB1ActionPerformed
 DefaultTableModel tab=(DefaultTableModel)tableTB.getModel();
int rowNo=tableTB.getSelectedRowCount();
    int[] selectedRows = tableTB.getSelectedRows();
boolean incName=jCheckBox1.isSelected();
int inclName=0;
if(incName==true){inclName=1;}
else{inclName=0;};
for(int i=0;i<selectedRows.length;i++){
    try{
    String contact=(String)tab.getValueAt(selectedRows[i],11);
    if((contact.trim().length())%10==0){
    
    }
    else{
    contact=(String)tab.getValueAt(selectedRows[i],12);
    }
testXML.generalInfo((String)tab.getValueAt(selectedRows[i],1),contact, jTextArea1.getText().trim(),inclName);
String response=testXML.strResponseBody;
   int find=response.indexOf("<error>");
   if(find==-1){
   tab.setValueAt("SENT", selectedRows[i], 0);
   }
   else{
   tab.setValueAt("FAILED", selectedRows[i], 0);
   }
    
    
}

catch(Exception e){}
}
    
    
        // TODO add your handling code here:
    }//GEN-LAST:event_showB1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1KeyPressed

    private void jTextArea1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyTyped
jLabel5.setText(jTextArea1.getText().length()+1+"");
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(allStudentInfoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(allStudentInfoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(allStudentInfoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(allStudentInfoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new allStudentInfoEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> castCB;
    private javax.swing.JComboBox<String> classCB;
    private javax.swing.JTextField countTF;
    private javax.swing.JComboBox<String> genreCB;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox<String> newSCB;
    private javax.swing.JComboBox<String> religionCB;
    private javax.swing.JComboBox<String> sessionCB;
    private javax.swing.JButton showB;
    private javax.swing.JButton showB1;
    private javax.swing.JCheckBox sortChB;
    private javax.swing.JCheckBox sortChB1;
    private javax.swing.JCheckBox sortChB2;
    private javax.swing.JCheckBox sortChB3;
    private javax.swing.JTextField strinTF;
    private javax.swing.JTable tableTB;
    private javax.swing.JComboBox<String> typeCB;
    // End of variables declaration//GEN-END:variables
}
